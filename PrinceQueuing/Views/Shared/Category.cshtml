@model Category

@{
    ViewData["Title"] = "Category";
    Layout = "_AdminLayout";
}

<partial name="_AdminPartial" />

<style>
    table tbody tr:hover {
        background-color: rgba(0, 0, 0, .05);
    }
</style>

<div class="container py-3">
    <div class="container-xxl">
        @* <h4>Categories</h4> *@
        <div class="card">
            <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                <div class="card-body">
                    <div class="text-end">
                        <a href="#" class="btn btn-primary" id="btnAdd">
                            Add Category
                        </a>
                    </div>
                    <div class="pt-3">
                        <div class="table-responsive">
                            <table class="table table-striped align-middle table-responsive" style="width:100%; table-layout:auto;">
                                <thead>
                                    <tr class="text-start fw-bold text-uppercase" style="color: #666666;">
                                        <th colspan="1" class="pe-2">Category Name</th>
                                        <th colspan="1" class="pe-2">Active</th>
                                        <th colspan="1" class="pe-2 text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tableBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="categoryModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">

        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Category</h5>
                    <button type="button" class="btn-close" aria-label="Close" onclick="HideModal()"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="CategoryId" id="CategoryId" />
                    <div class="mb-3">
                        <label asp-for="CategoryName" class="p-0"></label>
                        <input asp-for="CategoryName" class="form-control" />
                        <span asp-validation-for="CategoryName" class="text-danger"></span>
                    </div>

                 @*    <div class="mb-3">
                        <select class="form-select " asp-for="IsActive">
                            <option selected disabled>Active or Inactive</option>
                            <option value="1">Active</option>
                            <option value="2">Inactive</option>
                        </select>
                        <span asp-validation-for="IsActive" class="text-danger"></span>
                    </div> *@


                    <div class="mt-5 mb-3 text-end">
                        <button type="submit" class="btn btn-primary" id="addBtn" onclick="Insert()">Add</button>
                        <button type="submit" class="btn btn-success d-none" id="updateBtn">Update</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="closeBtn">Close</button>
                    </div>
                </div>
            </div>
        </div>

</div>



<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        GetAllCategories();

        //The deleteBtn is from the table
        $(document).on('click', '.deleteBtn', function () {
            var id = $(this).attr('id');
            Delete(id);
        });
        //The editBtn is from the table 
        $(document).on('click', '.editBtn', function () {
            var id = $(this).attr('id');
            Edit(id);
        });
        //The btnAdd is to display the Modal to add category
        $('#btnAdd').on('click', function () {
            $('#categoryModel').modal('show');
            $('.modal-title').text('Add Category');
            $('#updateBtn').addClass('d-none');
            $('#addBtn').removeClass('d-none');
        });
        //The updateBtn is to update that category in the modal
        $('#updateBtn').on('click', function () {
            var id = $('#CategoryId').val();
            Update(id);
        });
        //close the modal
        $('#closeBtn').on('click', function () {
            HideModal();
            ResetValidation();
        });
    });


    //Fetch Data
    function GetAllCategories() {

        $.ajax({
            url: '/Admin/GetAllCategories',
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (result) {
                if (result == null || result == undefined || result.length <= 0) {
                    var object = '';
                    object += '<tr>';
                    object += '<td class="text-center" colspan="3">' + 'Categories not available' + '</td>';
                    object += '</tr>';
                    $('#tableBody').html(object);
                }
                else {
                    var object = '';
                    $.each(result, function (index, item) {
                        object += '<tr>';
                        object += '<td>' + item.categoryName + '</td>';
                        object += '<td>' + item.isActive + '</td>';
                        object += '<td class="text-center">  <button class="btn btn-primary btn-sm editBtn" id="' + item.categoryId + '">Edit</button>  <button class="btn btn-danger btn-sm deleteBtn" id="' + item.categoryId + '">Delete</button></td>';
                        $('#tableBody').html(object);

                    })
                }
            },
            error: function () {
                // Handle error
                console.log('Unable to Fetch the Data.');
            }

        });

    }

   

    function Insert(){
        var vald = Validate();

        if (vald == false) {
            return false;
        }

        var formData = new Object();
        formData.categoryId = $('#CategoryId').val();
        formData.categoryName = $('#CategoryName').val();
        formData.isActive = $('#IsActive').val();

        $.ajax({
            type: 'post',
            url: '/Admin/CreateCategory',
            data: formData,
            dataType: 'json',
            success: function (result) {
                if (result == null || result == undefined || result.length <= 0) { 
                    alert('Unable to add the data.');
                }else{
                    HideModal();
                    ClearData();
                    GetAllCategories();
                    alert(result);
                }

            },
            error: function () {
                // Handle error
                console.log('Unable to Create the Data.');
            }

        });
    }


    function Edit(id){
        $.ajax({
            type: 'get',
            url: '/Admin/Get?id=' + id,
            dataType: 'json',
            success: function (result) {
                console.log(result)
                $('#categoryModel').modal('show');
                $('.modal-title').text('Edit Category');
                $('#addBtn').addClass('d-none');
                $('#updateBtn').removeClass('d-none');

                $('#CategoryId').val(result.categoryId);
                $('#CategoryName').val(result.categoryName);
                $('#IsActive').val(result.isActive);
            },
            error: function () {
                // Handle error
                console.log('Unable to Get the Data.');
            }
        });
    }

    function Update(id) {
        var vald = Validate();
        if (vald == false) {
            return false;
        }

        var formData = new Object();
        formData.categoryId = $('#CategoryId').val();
        formData.categoryName = $('#CategoryName').val();
        formData.isActive = $('#IsActive').val();

        $.ajax({
            type: 'post',
            url: '/Admin/Update?id=' + id,
            dataType: 'json',
            data: formData,
            success: function (result) {
                if (result == null || result == undefined || result.length <= 0) {
                    alert('Unable to add the data.');
                } else {
                    HideModal();
                    ClearData();
                    GetAllCategories();
                    alert(result);
                }
            },
            error: function () {
                // Handle error
                console.log('Unable to Update the Data.');
            }
        });
    }

    function Delete(id){
       if(confirm("Are you sure you want to delete this record?")){
            $.ajax({
                type: 'post',
                url: '/Admin/Delete?id=' + id,
                dataType: 'json',
                success: function (result) {
                    if (result == null || result == undefined || result.length <= 0) {
                        alert('Unable to delete the data.');
                    } else {
                        GetAllCategories();
                        alert(result);
                    }
                },
                error: function () {
                    // Handle error
                    console.log('There is an error, Unable to delete the Data.');
                }
            });
       }      
    }

    //Hide Modal
    function HideModal() {
        $('#categoryModel').modal('hide');
        ClearData();
    }
    //Clear Data
    function ClearData(){
        $('#CategoryId').val('');
        $('#CategoryName').val('');
        $('#IsActive').val('Active or Inactive');
    }
    //Validate
    function Validate() {
        var isValid = true;

        if ($('#CategoryName').val().trim() == '') {
            $('#CategoryName').addClass('is-invalid');
            var errorMessage = $('#CategoryName').data('val-required');
            $('#CategoryName').siblings('.text-danger').text(errorMessage);
            isValid = false;
        } else {
            $('#CategoryName').removeClass('is-invalid');
            $('#CategoryName').siblings('.text-danger').text('');
        }

        if ($('#IsActive').val() < 1 || $('#IsActive').val() > 2) {
            $('#IsActive').addClass('is-invalid');
            var errorMessage = $('#IsActive').data('val-range');
            $('#IsActive').siblings('.text-danger').text(errorMessage);
            isValid = false;
        } else {
            $('#IsActive').removeClass('is-invalid');
            $('#IsActive').siblings('.text-danger').text('');
        }

        return isValid;
    }

    // Function to reset validation
    function ResetValidation() {
        $('.is-invalid').removeClass('is-invalid');
        $('.text-danger').text('');
    }

    $('#CategoryName').change(function () {
        Validate();
    });
    $('#IsActive').change(function () {
        Validate();
    });





</script>